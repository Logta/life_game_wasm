[package]
name = "life_game_wasm"
version = "0.1.0"
authors = ["Life Game WASM Contributors"]
edition = "2021"
description = "A high-performance Conway's Game of Life implementation in WebAssembly"
license = "MIT"
repository = "https://github.com/yourusername/life-game-wasm"
readme = "README.md"
keywords = ["wasm", "game-of-life", "conway", "webassembly", "simulation"]
categories = ["wasm", "games", "simulation"]

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true


[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.100"
console_error_panic_hook = { version = "0.1.7", optional = true }
js-sys = "0.3.77"
getrandom = { version = "0.2", features = ["js"] }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.77"
features = [
    "console",
    "Window",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "CanvasRenderingContext2d"
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[features]
default = ["console_error_panic_hook"]

[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.7"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.50"
js-sys = "0.3.77"
